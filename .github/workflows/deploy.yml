name: Deploy Evolution Bot Stack

on:
  push:
    branches:
      - main # O pipeline roda sempre que houver um push para a branch 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do c√≥digo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Login no Docker Hub (Usa DOCKER_USERNAME e DOCKER_PASSWORD/PAT)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build da imagem do Bot com a tag completa
      - name: Build Bot Image Locally
        # Usa o nome de usu√°rio do Docker Hub do secret para taguear
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/evolution-bot:latest ./bot

      # 4. Push da imagem do Bot para o Docker Hub
      - name: Push Bot Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/evolution-bot:latest

      # 5. Configurar a Chave SSH na Action (Usa SSH_PRIVATE_KEY)
      - name: Configure SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # üîë NOVO PASSO DE SEGURAN√áA: Adiciona a chave p√∫blica do host (Permite a verifica√ß√£o de identidade)
      - name: Add SSH Known Hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      # 6. Deploy na VPS via SSH (Agora que as chaves est√£o no lugar, a conex√£o funciona)
      - name: Deploy via SSH
        env:
          HOST: ${{ secrets.VPS_HOST }}
          USER: ${{ secrets.VPS_USERNAME }}
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Certifique-se de que os comandos 'rsync' e 'ssh' AQUI
          # N√ÉO cont√™m mais a op√ß√£o insegura '-o StrictHostKeyChecking=no'

          # Sincroniza o docker-compose.yml e o .env com a VPS
          rsync -avz --delete \
                --exclude 'bot/' \
                -e "ssh" \
                docker-compose.yml .env ./ $USER@$HOST:~/projeto-evolution-bot/

          # Executa os Comandos Docker Compose na VPS
          ssh $USER@$HOST "
            cd ~/projeto-evolution-bot && \
            docker pull $DOCKER_USER/evolution-bot:latest && \
            docker-compose up -d --force-recreate
          "
